version: "3.11"

services:
  backend:
    build:
      context: .
      dockerfile: ./backend/dockerfiles/dockerfile-backend
    ports:
      - "8000:8000"
    environment:
      DB_CONNECTION_STRING: postgresql://postgres:postgres@database:5432/postgres?sslmode=allow
    restart: always

    depends_on:
      database:
        condition: service_healthy

    volumes:
      - ./backend:/app

    command: /bin/sh -c "alembic upgrade head && uvicorn proshield.main:app --reload --workers 1 --host 0.0.0.0 --port 8000"

  database:
    image: postgres:16.6
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
    volumes:
      - proshield-data:/var/lib/postgresql/data
    command: postgres -c listen_addresses=0.0.0.0
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - backend
    restart: always

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do sleep 1; done'"

volumes:
  postgres-data:
  proshield-data:
